version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Installing dependencies...
      - npm install
      - echo Installing missing Babel dependency...
      - npm install @babel/plugin-proposal-private-property-in-object --save-dev

  pre_build:
    commands:
      - echo Starting Docker daemon...
      - nohup /usr/local/bin/dockerd > /dev/null 2>&1 &
      - timeout 15 sh -c "until docker info; do echo 'Waiting for Docker to start...'; sleep 1; done"
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL
      - echo Configuring Git for CodeCommit...
      - git config --global credential.helper "!aws codecommit credential-helper $@"
      - git config --global credential.UseHttpPath true
      - echo Cloning HelmChart repository...
      - git clone $HELMCHART_URL

  build:
    commands:
      - echo Building the React project...
      - npm run build
      - echo Uploading frontend build to S3...
      - aws s3 sync ./build s3://shortpingoo-frontendbucket/FrontEnd_image/ --delete
      - echo Building the Docker image...
      - docker build -t $ECR_REPO:$TIMESTAMP .
      - docker tag $ECR_REPO:$TIMESTAMP $ECR_URL/$ECR_REPO:$TIMESTAMP

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_URL/$ECR_REPO:$TIMESTAMP
      - echo Updating frontendTimestamp and frontend image tag in values.yaml...
      - sed -i "s/frontendTimestamp:.*/frontendTimestamp:\"$TIMESTAMP\"/" HelmChart-for-Argo/helm-charts/values.yaml
      - sed -i "s/tag: .*/tag: \"$TIMESTAMP\"/" HelmChart-for-Argo/helm-charts/values.yaml
      - echo Committing changes to values.yaml...
      - git config --global user.name "CodeBuild"
      - git config --global user.email "codebuild@example.com"
      - cd HelmChart-for-Argo
      - git checkout main || git checkout -b main 
      - git add helm-charts/values.yaml
      - git commit -m "Update frontendTimestamp and image tag to $TIMESTAMP" || echo "No changes to commit"
      - git push origin main || echo "No changes to push"

artifacts:
  files:
    - '**/*'
  discard-paths: yes
